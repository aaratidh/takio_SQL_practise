Problem statement:
Table: Department
+-------------+---------+
| Column Name | Type    |
+-------------+---------+
| id          | int     |
| name        | varchar |
+-------------+---------+
In SQL, id is the primary key column for this table. It is guaranteed that the department name is not NULL.
Each row of this table indicates the ID of a department and its name.
 
 
Find employees who have the highest salary in each of the departments.
Return the result table in any order.
The result format is in the following example.
 
Example 1:
Input: 
Employee table:
+----+-------+--------+--------------+
| id | name  | salary | departmentId |
+----+-------+--------+--------------+
| 1  | Joe   | 70000  | 1            |
| 2  | Jim   | 90000  | 1            |
| 3  | Henry | 80000  | 2            |
| 4  | Sam   | 60000  | 2            |
| 5  | Max   | 90000  | 1            |
+----+-------+--------+--------------+
Department table:
+----+-------+
| id | name  |
+----+-------+
| 1  | IT    |
| 2  | Sales |
+----+-------+
Output: 
+------------+----------+--------+
| Department | Employee | Salary |
+------------+----------+--------+
| IT         | Jim      | 90000  |
| Sales      | Henry    | 80000  |
| IT         | Max      | 90000  |
+------------+----------+--------+
Explanation: Max and Jim both have the highest salary in the IT department and Henry has the highest salary in the Sales department.


Solution 

select e.ename ename , d.departement  departemnt , s.salary salary,  
dense_rank() over (partition by departement order by salary desc) as  rank 
from employee e
join  departemnt d 

SELECT department, Employee, Salary
FROM RankedSalaries
WHERE rank = 1;

